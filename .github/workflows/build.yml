name: Build

on:
  push:
    branches: main
  pull_request:
    branches: "*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          architecture: "x64"

      - name: Setup pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-3.9-${{ hashFiles('package.json') }}
          restore-keys: |
            pip-3.9-
            pip-

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          python -m pip install -U pip setuptools codecov
          jlpm
          yarn add codecov

      - name: Test the extension
        run: |
          python -m pip install --upgrade -v -e ".[test, examples, docs]"
          yarn run lint:check

          ipython -c "import pytest; pytest.main(['.'])"
          jlpm test

      - name: Check docs can be build + links
        run: |
          sudo apt install -y pandoc
          pushd docs
          make html
          popd
